package com.example.demo.service;

import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;



@Service
public class OrderServiceImpl implements OrderService {

    @Autowired
    private PortfolioClient portfolioClient;

    @Autowired
    private OrderRepository orderRepository;

    @Override
    public void buyStock(int portfolioId, List<Stock> stock) {
        portfolioClient.addStockToPortfolio(portfolioId, stock);

        // Save the order details
        Order order = new Order();
        order.setPortfolioId(portfolioId);
        order.setStockSymbol(stock.getSymbol());
        order.setStockName(stock.getName());
        order.setOrderType("BUY");
        order.setQuantity(stock.getQuantity());
        order.setPrice(stock.getPurchasePrice());
        order.setTimestamp(LocalDateTime.now());
        saveOrder(order);
    }

    @Override
    public void sellStock(int portfolioId, String stockSymbol,int stockQuantity) {
        portfolioClient.removeStockFromPortfolio(portfolioId, stockSymbol);

        // Fetch the stock details (assuming price and quantity for simplicity)
        Stock stock = new Stock();
        stock.setSymbol(stockSymbol);
        stock.setName("Example Stock");
        stock.setQuantity(1); // Update with actual logic
        stock.setPurchasePrice(100.00); // Update with actual logic

        // Save the order details
        Order order = new Order();
        order.setPortfolioId(portfolioId);
        order.setStockSymbol(stock.getSymbol());
        order.setStockName(stock.getName());
        order.setOrderType("SELL");
        order.setQuantity(stock.getQuantity());
        order.setPrice(stock.getPurchasePrice());
        order.setTimestamp(LocalDateTime.now());
        saveOrder(order);
    }

    @Override
    public Order saveOrder(Order order) {
        return orderRepository.save(order);
    }
}
