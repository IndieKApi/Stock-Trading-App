package com.example.demo.entity;

import com.fasterxml.jackson.annotation.JsonProperty;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Lob;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

@Entity
@AllArgsConstructor
@NoArgsConstructor
public class CompanyProfile {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	@JsonProperty("symbol")
	@Column(unique = true)
	private String symbol;

	@JsonProperty("price")
	private Double price;

	@JsonProperty("beta")
	private Double beta;

	@JsonProperty("volAvg")
	private Long volAvg;

	@JsonProperty("mktCap")
	private Long mktCap;

	@JsonProperty("lastDiv")
	private Double lastDiv;

	@JsonProperty("range")
	private String priceRange; // Renamed from "range"

	@JsonProperty("changes")
	private Double changes;

	@JsonProperty("companyName")
	private String companyName;

	@JsonProperty("currency")
	private String currency;

	@JsonProperty("cik")
	private String cik;

	@JsonProperty("isin")
	private String isin;

	@JsonProperty("cusip")
	private String cusip;

	@JsonProperty("exchange")
	private String exchange;

	@JsonProperty("exchangeShortName")
	private String exchangeShortName;

	@JsonProperty("industry")
	private String industry;

	@JsonProperty("website")
	private String website;

	@JsonProperty("description")
	@Lob
	private String description;

	@JsonProperty("ceo")
	private String ceo;

	@JsonProperty("sector")
	private String sector;

	@JsonProperty("country")
	private String country;

	@JsonProperty("fullTimeEmployees")
	private String fullTimeEmployees;

	@JsonProperty("phone")
	private String phone;

	@JsonProperty("address")
	private String address;

	@JsonProperty("city")
	private String city;

	@JsonProperty("state")
	private String state;

	@JsonProperty("zip")
	private String zip;

	@JsonProperty("dcfDiff")
	private Double dcfDiff;

	@JsonProperty("dcf")
	private Double dcf;

	@JsonProperty("image")
	private String image;

	@JsonProperty("ipoDate")
	private String ipoDate;

	@JsonProperty("defaultImage")
	private Boolean defaultImage;

	@JsonProperty("isEtf")
	private Boolean isEtf;

	@JsonProperty("isActivelyTrading")
	private Boolean isActivelyTrading;

	@JsonProperty("isAdr")
	private Boolean isAdr;

	@JsonProperty("isFund")
	private Boolean isFund;

	@Override
	public String toString() {
		return "CompanyProfile [symbol=" + symbol + ", price=" + price + ", beta=" + beta + ", volAvg=" + volAvg
				+ ", mktCap=" + mktCap + ", lastDiv=" + lastDiv + ", priceRange=" + priceRange + ", changes=" + changes
				+ ", companyName=" + companyName + ", currency=" + currency + ", cik=" + cik + ", isin=" + isin
				+ ", cusip=" + cusip + ", exchange=" + exchange + ", exchangeShortName=" + exchangeShortName
				+ ", industry=" + industry + ", website=" + website + ", description=" + description + ", ceo=" + ceo
				+ ", sector=" + sector + ", country=" + country + ", fullTimeEmployees=" + fullTimeEmployees
				+ ", phone=" + phone + ", address=" + address + ", city=" + city + ", state=" + state + ", zip=" + zip
				+ ", dcfDiff=" + dcfDiff + ", dcf=" + dcf + ", image=" + image + ", ipoDate=" + ipoDate
				+ ", defaultImage=" + defaultImage + ", isEtf=" + isEtf + ", isActivelyTrading=" + isActivelyTrading
				+ ", isAdr=" + isAdr + ", isFund=" + isFund + "]";
	}
}
