package com.example.demo;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class InventoryMicroserviceApplicationTests {

	@Mock
    private InventoryOpenFeign inventoryOpenFeign;

    @Mock
    private StockInventoryRepository inventoryRepository;

    @InjectMocks
    private InventoryServiceImpl inventoryService;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testRemoveStockFromInventory() {
        // Prepare test data
        Inventory inventory = new Inventory();
        inventory.setId(1);
        inventory.setUserId(100);
        Stock stock = new Stock();
        stock.setSymbol("AAPL");
        stock.setQuantity(10);
        stock.setPurchasePrice(100.0);
        List<Stock> stocks = Arrays.asList(stock);
        inventory.setStocks(stocks);
        
        CompanyInfoResponse companyInfoResponse = new CompanyInfoResponse();
        companyInfoResponse.setPrice(150.0);
        companyInfoResponse.setCompanyName("Apple Inc.");

        // Mock repository and client responses
        when(inventoryRepository.findById(anyInt())).thenReturn(Optional.of(inventory));
        when(inventoryOpenFeign.getCompanyInfo(anyString())).thenReturn(companyInfoResponse);
        when(inventoryRepository.save(any(Inventory.class))).thenReturn(inventory);

        // Call the method
        StockSellDTO result = inventoryService.removeStockFromInventory(1, "AAPL", 5);

        // Verify the result
        assertEquals(1, result.getInventoryId());
        assertEquals(100, result.getUserId());
        assertEquals(150.0, result.getSellValue());
        assertEquals("AAPL", result.getStockSymbol());
        assertEquals("Apple Inc.", result.getStockname());
        assertEquals(5, result.getStockQuantity());
        assertEquals(150.0, result.getStocksellPrice());

        // Verify interactions
        verify(inventoryRepository, times(1)).findById(anyInt());
        verify(inventoryOpenFeign, times(1)).getCompanyInfo(anyString());
        verify(inventoryRepository, times(1)).save(any(Inventory.class));
    }

}
